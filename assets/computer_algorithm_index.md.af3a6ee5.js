import{_ as E,E as A,o as s,c as r,b as l,w as a,J as e,a as p,a0 as n,S as o,k as c}from"./chunks/framework.54c93748.js";const m=JSON.parse('{"title":"囚犯与灯的故事之异次元杀阵版","description":"从一盏灯的应用可以学习编程的思维？太有趣了！让我们一起从囚犯与灯的故事体会编程思维的乐趣。","frontmatter":{"sticky":100,"title":"囚犯与灯的故事之异次元杀阵版","description":"从一盏灯的应用可以学习编程的思维？太有趣了！让我们一起从囚犯与灯的故事体会编程思维的乐趣。","cover":"https://cdn.jsdelivr.net/gh/JiansongLee/blogimg@main/img/cube-min.jpg","author":"建松","readingTime":true,"date":"2023-08-25T13:00:00.000Z","tag":["计算机相关","编程乐趣"],"tags":["信息"],"categories":["计算机"]},"headers":[],"relativePath":"computer/algorithm/index.md","filePath":"computer/algorithm/index.md","lastUpdated":1693905822000}'),B={name:"computer/algorithm/index.md"},i=o('<h1 id="囚犯与灯的故事——异次元杀阵版" tabindex="-1">囚犯与灯的故事——异次元杀阵版 <a class="header-anchor" href="#囚犯与灯的故事——异次元杀阵版" aria-label="Permalink to &quot;囚犯与灯的故事——异次元杀阵版&quot;">​</a></h1><p>出场人物：外星AI，主角一，主角二； 配角：路人甲、路人乙、路人丙、路人丁</p><h2 id="_01、一百个来自地球的试验品" tabindex="-1">01、一百个来自地球的试验品 <a class="header-anchor" href="#_01、一百个来自地球的试验品" aria-label="Permalink to &quot;01、一百个来自地球的试验品&quot;">​</a></h2><p>大家有看过一部电影，叫《异次元杀阵》吗？电影里，一些人被困在魔方里，魔方的各个房间（六面体）中，每一个面都有一个门，分别通向不同的房间。这些危险的房间装着不同类型的传感器和陷阱，如果哪个冒失鬼进到了有陷阱的房间，就会九死一生。</p><p>想象一下，假如有一百个地球人，被关进了异次元杀阵那样的立方体里面，身边到处都是机关。</p><p><img src="https://cdn.jsdelivr.net/gh/JiansongLee/blogimg@main/img/cubewithhuman.jpg" alt="人在异次元杀阵"></p><p>这时，一个声音在身旁响起。</p><p>“我是外星AI机器人，你们是来自地球的试验品，已经被我关到飞船里面。我将在接下来的时间，把你们每个人单独放到一个这样的立方体中，每个人都不可能与其它人有任何接触。放心，你们在这里面，不会感觉到时间的流逝，不需要考虑吃饭穿衣衰老的问题，但是却可以保留在这里的记忆。换句话说，可以认为你们在这里是永生的！”</p><p>“我会准备一个特殊的立方体，里面除了一盏灯之外，什么都没有，这盏灯只有打开关闭两种状态。你们每个人在这个立方体中，只能操作这盏灯的开关状态，不可能留下其他任何痕迹。就算留下任何记号，也会在下一个人进来之前被初始化清理程序清除干净。只有这盏灯的状态会被传递！”</p><p>“这盏灯的初始状态是关闭的。这个特殊立方体中只有这盏灯的状态会保留到下一个人进来，其他任何信息都不可能保留。除你们之中的人之外，没有其他人会去碰开关。只有你们之中的人可以改变它的状态，将它打开或是关闭。这盏灯会永远有充足的能源供应，灯泡和电路不会出故障。”</p><p>“你们只能住在自己的立方体中。每隔一段不固定的时间，你们所处的立方体会响起通知，正前方的门可以打开，你们可以通过这个门进入这个特殊的有灯的立方体。这个立方体中，只有这盏灯，你们不可能遇到任何其他人。你们每个人被选中进入这个房间的顺序和次数都是随机的。”</p><p>“现在我向你们提出一个试验要求，给你们30分钟集中在一起，在这期间你们可以充分讨论。在上面的条件下，试验开始后，如果存在某个时刻，你们中间有任何一个人能够向我证明你们每个人都进入过有灯的立方体中至少一次，就可以全部获得释放。”</p><p>“但如果你们中间的人提出这个结论时，实际还有人没有进去过这个特殊立方体中，则你们所处的立方体杀阵即刻启动，每个人都会被杀死。”</p><p>“现在你们可以开始讨论了！”</p><h2 id="_02、解决方案大讨论" tabindex="-1">02、解决方案大讨论 <a class="header-anchor" href="#_02、解决方案大讨论" aria-label="Permalink to &quot;02、解决方案大讨论&quot;">​</a></h2><p>“啊……为什么我会被抓进来？睡一觉起来就到这里，难道是我昨天踩死蚂蚁了？！”</p><p>“只有一盏灯，只能开和关，能做什么嘛？！”</p><p>“我是做梦吗还是来到电影里？是进到恐怖片还是科幻片……”</p><p>整个立方体内乱成一团，路人甲乙丙丁纷纷乱叫。</p><p>突然有个人大声说：“大家不要慌，我看过这个问题的，我告诉大家可以怎么做！请大家相信我。先安静下来，听我说！”</p><p>他身边的人先安静下来，其他人看别人不说话了，也慢慢安静下来。</p><p>那个人开始说：“这个不是什么难题，我想起解决办法了。大家按我说的办。我们让第一个进去特殊立方体的人做计数者，其他人每次进去时，如果从来没开过灯，并且看到灯是关闭的，则将灯打开，但如果已经开过一次灯，则不做任何操作。”</p><p>“计数者每次进去特殊立方体，如果看到灯是开着的，则将灯关掉，关一次则表示有一个人进来了一次，并且在心里计数加一。计数至99，代表其他99人都进去过特殊立方体了，就可以向AI提出每个人都进去过了。”</p><p>人群中有一个人说：“开灯关灯我会，什么叫如果从来没开过灯还看到灯是关闭的，我是做生意的，我听不懂啦。”</p><p>另一个人说：“我记性不好，我记不住几个……”</p><p>眼看大家又要乱了，又一个声音响起来：“这个方案大致没错，但是你有没有考虑过一个问题，AI说每个人被选中进入这个房间的顺序和次数都是随机的，我们不可能知道谁是第一个进去的。所以，我们可以而且必须自己挑选计数者，这个人记性要好。”</p><p>他顿了一下，“不管这个计数者是第几个进去特殊立方体的，每次进去他只做一件事，如果灯是开着的，就把它关上。同时心里的计数值加1。”</p><p>“而其他人就更简单了。如果你没有开过灯，那么每次进去时，如果灯是关着的，就把它打开。如果开过灯，轮到你时，你甚至可以选择不进去。因为你只允许开一次灯，以后灯的状态与你无关。”</p><p>“AI,帮我展示一下流程图和伪代码！”</p><p>AI:“可以。你们中幸运地拥有程序员，看来你们有希望闯关成功了！”</p><p>“流程图”</p>',31),C=o(`<p>“以下是伪代码。”</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-N9LWd" id="tab-jA2DCXO" checked="checked"><label for="tab-jA2DCXO">计数者</label><input type="radio" name="group-N9LWd" id="tab-2riiW2V"><label for="tab-2riiW2V">其他人</label></div><div class="blocks"><div class="language-sh active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">计数者操作</span><span style="color:#89DDFF;">()</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    if</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">灯开着</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">关掉灯</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">计数加一</span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">其他人操作</span><span style="color:#89DDFF;">()</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    if</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">开过灯</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">不动作</span></span>
<span class="line"><span style="color:#A6ACCD;">    else:</span></span>
<span class="line"><span style="color:#A6ACCD;">        if</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">灯关着</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">打开灯</span></span></code></pre></div></div></div><p>“如果记不住，我告诉大家一句口号：开过灯，不动作。否则如果灯关着，打开它。”<br> “而计数者的动作简单来说就是：灯开着，关掉它，数加一。”<br> “当计数者统计到100的时候，就可以通知AI了。”</p><p>“还是不好理解。”<br> 主角二：“那好吧，我放大招了。请大家看下面这个对应关系。”</p><table><thead><tr><th style="text-align:left;">实际情况</th><th style="text-align:left;">对应理解</th></tr></thead><tbody><tr><td style="text-align:left;">房间里有一盏灯</td><td style="text-align:left;">房间里有一个盒子</td></tr><tr><td style="text-align:left;">灯有两种状态（开着和关着）</td><td style="text-align:left;">盒子只有两种状态（放了东西和空着）</td></tr><tr><td style="text-align:left;">灯关着</td><td style="text-align:left;">盒子里空的</td></tr><tr><td style="text-align:left;">灯开着</td><td style="text-align:left;">盒子里放了东西（比如一个小球）</td></tr><tr><td style="text-align:left;">普通人开灯</td><td style="text-align:left;">普通人把手里的小球放到盒子里</td></tr><tr><td style="text-align:left;">普通人不能关灯</td><td style="text-align:left;">普通人不能把盒子里的小球收起来</td></tr><tr><td style="text-align:left;">每个人只可以开一次灯</td><td style="text-align:left;">每个人手里只有一个小球</td></tr><tr><td style="text-align:left;">计数者看到灯开着</td><td style="text-align:left;">计数者看到盒子里有球</td></tr><tr><td style="text-align:left;">计数者关灯，计数加一</td><td style="text-align:left;">计数者收起球，盒子变空，小球数加一</td></tr></tbody></table><p>“简单来说就是，我们一开始，想象特殊房间里有个盒子，是空的，而每个人手里都分到一个小球。除了计数者，其他人每次进去，都看一下盒子是不是空的。如果是空的而且手里还有小球，就把手里的小球放进去，这样这个人手里就没有小球了。”<br> “计数者每次进去，都看看盒子里有没有小球。有的话，就把小球收起来，盒子就变空。等计数者收集到100个小球（别人的99个，加上自己的1个），那么他就可以知道，每个人都至少进去过一次特殊房间了。”</p><p>路人甲叫了起来：“我懂了，我只有一个球，如果盒子是空的，就把球放进去。然后我就没有球了，不管盒子里有没有球，想放也放不了。”<br> 路人乙也叫了起来：“如果我是计数者，我只负责收盒子里的小球。不管这个小球是哪一位放的，反正其他人每人只有一个小球，我只管算小球的数量就行了。不管他进去几次，只有这个小球放进去的那一次，才是我可以统计到他有进去的那一次。”<br> 主角二：“对了，这样我们中的计数者，根据自己拿到的小球数达到100，就能判断其它人已经都进去过这个房间了。”</p><h2 id="_03、囚犯与灯的难度升级" tabindex="-1">03、囚犯与灯的难度升级 <a class="header-anchor" href="#_03、囚犯与灯的难度升级" aria-label="Permalink to &quot;03、囚犯与灯的难度升级&quot;">​</a></h2><p>AI:“精彩！精彩！经过我的判断，你们的方案是可行的。你们果然可以在每一个人都进去过特殊立方体的时候，告知我这个事情。这个方案对我自己的成长也是很有帮助的。”<br> AI:“现在你们已经拥有可以出去的权利了。有没有兴趣再试一下，我增加一下难度，如果你们一样可以解决问题，我除了放你们出去，还送你们每个人一百万克黄金！但是如果失败，你们就只能被我关着，直到永远！”</p><p>主角一：“这个游戏的可操作空间太小，难度不能升级太多。可否先告知我们，你要升级到什么程度，再让我们判断是否继续参加游戏？”<br> AI：“不错，你能问出这个问题，代表你对这个游戏还是有挺正确的认识的。好吧，我的难度升级很简单。和之间的规则一样，只有一个差别。就是，特殊立方体中，那个灯的初始状态是不确定的，可能是开着的，也可能是关着的。”</p><p>停了一会，主角一：“应该存在解法，我们参加游戏！”</p><p>由于之前的成功，大家对主角一有了信任的基础。暂时没人说话，可能有人已经在计算一百万克黄金是什么概念吧？<br> “很好，那么一样，给你们30分钟聚在一起商量办法。你们可以开始了。”</p><h2 id="_04、囚犯与灯的思考升级" tabindex="-1">04、囚犯与灯的思考升级 <a class="header-anchor" href="#_04、囚犯与灯的思考升级" aria-label="Permalink to &quot;04、囚犯与灯的思考升级&quot;">​</a></h2><p>路人甲：“这不是很简单吗？条件一样，我们就一样用上次的办法。每个人开一次灯。”<br> 路人乙：“是啊，如果灯的初始状态是关着的，计数者进去，就和之前一样。如果灯的初始状态是开着的，那第一次就不算，都数到100报告。”<br> 主角一：“不对，同志们。如果初始状态是开着的，他就需要数到101，如果初始状态是关着他，他需要数到100。”<br> 主角二：“这里有个问题，他确定可以等到100。但是仅有100的条件，却是不充分的。他需要数到101才能准确判断。但实际是，他可能永远等不到101。这种不确定性是最可怕的。”<br> 主角一：“关键是，计数者第一次进去特殊立方体后，如果灯的状态是开着的，他无法确定是初始状态还是其他人开的。”<br> 主角二：“关键就是，初始状态无法确定。AI很可能在99人进去过后，让最后一个没进去过的人一直不被选中，如果不存在确切的判断方法，我们所有人都可能离不开这里。唉，如何判断所有人进去过呢？还是我们放弃吧。” 主角一：“稍等，我再想想。根据我们之前用的小球模型，是不是可以简化我们的推理？”</p><p>“假如用盒子和小球的模型来思考问题，相当于，刚开始盒子中不确定有没有小球。”<br> “当计数者第一次进到特殊立方体中，他看到盒子中有小球，他无法确定这个球是初始状态原来就有的，还是其它人放进去的。无法确定这第一个小球的归属，如果一个小球代表一个人，不能判断最后一个人是否进去过。”<br> “啊！我想到了，我们无法确定的只是第一个小球的是不是我们自己人放的。后面的所有小球都可以确定是自己人放的。如果我们能想办法排除这个干扰项，就可以完成任务。”<br> “根据上面的推理，我们知道用一个小球代表一个人是行不通的。因为无法确定这个小球的归属。”<br> “但如果我们假设，需要两个以上小球，才能确定一个人呢？那么不管第一个小球是不是自己人放的，第二个以上小球总归是我们自己人放的！”<br> “这么说起来，如果我们每个人都需要放两个或以上小球，就可以排除第一个小球的干扰！”<br> “这样理一下就清楚了。最简单的，每个人只需要放两个小球就可以了。一旦收集到200个小球，不管刚开始的小球是谁放的，都可以确定所有人都进去过了。”<br> “因为第一个小球是否存在无法判断，导致最后一个小球（第201个）也无法判断是否存在。但是，能收集到第200个的小球是可以确定的。”</p><blockquote><p>如果初始状态有小球：200个小球=1（初始状态的小球）+198（99个人手里的2个小球）+1（最后一个人的第1个小球）</p><p>如果初始状态没有小球：200个小球=0（初始状态没有小球）+198（99个人手里的2个小球）+2（最后一个人的2个小球）</p></blockquote><p>“如果每个人只有一个小球里，我们很可能等不到101。但我们可以确定，我们一定可以等到200。这是不一样的确定性！”<br> “有确定的判断标准，计数者就不用在不确定的状态中，患得患失！”<br> “AI，同样展示一下流程图和伪代码！”</p>`,17),d=o(`<div class="vp-code-group"><div class="tabs"><input type="radio" name="group-epZPq" id="tab-oHDCZFr" checked="checked"><label for="tab-oHDCZFr">计数者</label><input type="radio" name="group-epZPq" id="tab-J3_6sRv"><label for="tab-J3_6sRv">其他人</label></div><div class="blocks"><div class="language-sh active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">计数者操作</span><span style="color:#89DDFF;">()</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    if</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">灯开着</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">关掉灯</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">计数加一</span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">其他人操作</span><span style="color:#89DDFF;">()</span><span style="color:#C3E88D;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    if</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">开过两次灯</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">不动作</span></span>
<span class="line"><span style="color:#A6ACCD;">    else:</span></span>
<span class="line"><span style="color:#A6ACCD;">        if</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">灯关着</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">打开灯</span></span></code></pre></div></div></div><p>“跟之前一样，如果记不住，我告诉大家一句口号：开过两次灯，不动作。否则如果灯关着，打开它。”<br> “而计数者的动作简单来说就是：灯开着，关掉它，数加一。”<br> “当计数者统计到200的时候，就可以通知AI了。”</p><p>“AI，我们可以开始游戏了！”<br> AI：“很好，你们解决了这个难题。你们可以带着自己的奖励，回到自己来之前的地方了！”</p><h2 id="_05、囚犯与灯的举一反三" tabindex="-1">05、囚犯与灯的举一反三 <a class="header-anchor" href="#_05、囚犯与灯的举一反三" aria-label="Permalink to &quot;05、囚犯与灯的举一反三&quot;">​</a></h2><p>一个故事讲完了。我们来梳理一下里面的推理过程，以及带给我们的思考。</p><p><strong>如果遇到一个计算机类的问题很难，不能一下子得到答案，可以用生活中常见的事物做一个类比，然后用类比来推理思考，往往能得到巧妙的解法。</strong></p><p>比如，上面这个故事，用一盏灯来统计100个人的状态。开灯关灯很难理解，如果用每人把一个小球放到盒子里的模型思考，假想成每个人一个小球，放到盒子里，指定一个人收集，就很好理解。<br> 如果灯刚开始的状态不能确定，就更加难以直接解决。但是用小球和盒子模型来思考，就会发现，初始状态不确定，代表着每人一个小球无法解决问题。<br> 很自然地想到，假设每人手里有两个小球，就可以去掉第一个初始小球的干扰。</p>`,7),D=c("p",null,"这个例子，可以在学习或解决计算机或生活中问题的时候，给我们以启示。希望大家喜欢！",-1);function F(y,h,b,g,_,f){const t=A("Mermaid");return s(),r("div",null,[i,(s(),l(n,null,{default:a(()=>[e(t,{id:"mermaid-93",class:"eita",graph:"flowchart%20LR%0AA(%E8%AE%A1%E6%95%B0%E8%80%85)%20--%3E%7C%E8%A2%AB%E9%80%89%E4%B8%AD%7C%20B(%E8%BF%9B%E7%89%B9%E6%AE%8A%E7%AB%8B%E6%96%B9%E4%BD%93)%0AB%20--%3E%20C%7B%E7%81%AF%E5%BC%80%E7%9D%80%7D%0AC%20--%3E%7C%E6%98%AF%7C%20D%5B%E5%85%B3%E7%81%AF%5D%0AC%20--%3E%7C%E5%90%A6%7C%20E%5B%E4%B8%8D%E5%8A%A8%E4%BD%9C%5D%0AD%20--%3E%20F%5B%E8%AE%A1%E6%95%B0%E5%8A%A0%E4%B8%80%5D%0A"})]),fallback:a(()=>[p(" Loading... ")]),_:1})),(s(),l(n,null,{default:a(()=>[e(t,{id:"mermaid-94",class:"eita",graph:"flowchart%20LR%0AA(%E5%85%B6%E4%BB%96%E4%BA%BA)%20--%3E%7C%E8%A2%AB%E9%80%89%E4%B8%AD%7C%20AB(%E8%BF%9B%E7%89%B9%E6%AE%8A%E7%AB%8B%E6%96%B9%E4%BD%93)%0AAB%20--%3E%20B%7B%E5%BC%80%E8%BF%87%E7%81%AF%7D%0AB%20--%3E%7C%E6%98%AF%7C%20E%5B%E4%B8%8D%E5%8A%A8%E4%BD%9C%5D%0AB%20--%3E%7C%E5%90%A6%7C%20C%7B%E7%81%AF%E5%85%B3%E7%9D%80%7D%0AC%20--%3E%7C%E6%98%AF%7C%20D%5B%E5%BC%80%E7%81%AF%5D%0AC%20--%3E%7C%E5%90%A6%7C%20F%5B%E4%B8%8D%E5%8A%A8%E4%BD%9C%5D%0A"})]),fallback:a(()=>[p(" Loading... ")]),_:1})),C,(s(),l(n,null,{default:a(()=>[e(t,{id:"mermaid-235",class:"eita",graph:"flowchart%20LR%0AA(%E8%AE%A1%E6%95%B0%E8%80%85)%20--%3E%7C%E8%A2%AB%E9%80%89%E4%B8%AD%7C%20B(%E8%BF%9B%E7%89%B9%E6%AE%8A%E7%AB%8B%E6%96%B9%E4%BD%93)%0AB%20--%3E%20C%7B%E7%81%AF%E5%BC%80%E7%9D%80%7D%0AC%20--%3E%7C%E6%98%AF%7C%20D%5B%E5%85%B3%E7%81%AF%5D%0AC%20--%3E%7C%E5%90%A6%7C%20E%5B%E4%B8%8D%E5%8A%A8%E4%BD%9C%5D%0AD%20--%3E%20F%5B%E8%AE%A1%E6%95%B0%E5%8A%A0%E4%B8%80%5D%0A"})]),fallback:a(()=>[p(" Loading... ")]),_:1})),(s(),l(n,null,{default:a(()=>[e(t,{id:"mermaid-236",class:"eita",graph:"flowchart%20LR%0AA(%E5%85%B6%E4%BB%96%E4%BA%BA)%20--%3E%7C%E8%A2%AB%E9%80%89%E4%B8%AD%7C%20AB(%E8%BF%9B%E7%89%B9%E6%AE%8A%E7%AB%8B%E6%96%B9%E4%BD%93)%0AAB%20--%3E%20B%7B%E5%BC%80%E8%BF%87%E4%B8%A4%E6%AC%A1%E7%81%AF%7D%0AB%20--%3E%7C%E6%98%AF%7C%20E%5B%E4%B8%8D%E5%8A%A8%E4%BD%9C%5D%0AB%20--%3E%7C%E5%90%A6%7C%20C%7B%E7%81%AF%E5%85%B3%E7%9D%80%7D%0AC%20--%3E%7C%E6%98%AF%7C%20D%5B%E5%BC%80%E7%81%AF%5D%0AC%20--%3E%7C%E5%90%A6%7C%20F%5B%E4%B8%8D%E5%8A%A8%E4%BD%9C%5D%0A"})]),fallback:a(()=>[p(" Loading... ")]),_:1})),d,(s(),l(n,null,{default:a(()=>[e(t,{id:"mermaid-259",class:"eita",graph:"flowchart%20TB%0AA(%E7%81%AF%E7%9A%84%E9%97%AE%E9%A2%98)%20--%3E%20%7C%E8%BD%AC%E6%8D%A2%E6%80%9D%E7%BB%B4%7CB(%E7%9B%92%E5%AD%90%E5%B0%8F%E7%90%83%E6%A8%A1%E5%9E%8B)%0AB%20--%3E%20%7C%E6%9D%A1%E4%BB%B6%7C%20C(%E5%88%9D%E5%A7%8B%E7%8A%B6%E6%80%81%E4%B8%8D%E7%A1%AE%E5%AE%9A)%0AC%20--%3E%20%7C%E6%8E%A8%E7%90%86%7C%20D(%E6%AF%8F%E4%B8%AA%E4%BA%BA%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%90%83%E5%AD%98%E5%9C%A8%E5%B9%B2%E6%89%B0)%0AD%20--%3E%20%7C%E6%8E%A8%E7%90%86%7C%20E(%E6%AF%8F%E4%B8%AA%E4%BA%BA%E5%A4%9A%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%90%83%E6%8E%92%E9%99%A4%E5%B9%B2%E6%89%B0)%0AE%20--%3E%20%7C%E8%BF%94%E5%9B%9E%E5%AE%9E%E9%99%85%7CF(%E6%AF%8F%E4%BA%BA%E5%BC%80%E4%B8%A4%E6%AC%A1%E7%81%AF%EF%BC%8C%E8%AE%A1%E6%95%B0%E5%88%B0200%EF%BC%8C%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98)%0A"})]),fallback:a(()=>[p(" Loading... ")]),_:1})),D])}const x=E(B,[["render",F]]);export{m as __pageData,x as default};
